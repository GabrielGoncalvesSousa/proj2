DROP TABLE pedido_fotos;
DROP TABLE pedido;
DROP TABLE estado;
DROP TABLE subcategoria;
DROP TABLE categoria;
DROP TABLE utilizador;
DROP VIEW entidade_pedidos;
DROP VIEW historico_funcionario;

CREATE TABLE utilizador(
    id_utilizador NUMBER,
    estado NUMBER(1) DEFAULT 0,
    email VARCHAR2(254) NOT NULL,
    nif VARCHAR2(9) NOT NULL,
    password VARCHAR(30) NOT NULL,
    nome VARCHAR2(20) NOT NULL,
    descricao VARCHAR2(255),
    telefone VARCHAR2(20),
    cod_postal VARCHAR2(10),
    localidade VARCHAR2(50),
    morada VARCHAR2(200),
    tipoutil NUMBER(2),
    id_categoria NUMBER,
    CONSTRAINT constraint_email UNIQUE(email),
    CONSTRAINT constraint_nif UNIQUE(nif),
    CONSTRAINT pk_id PRIMARY KEY(id_utilizador),
    CONSTRAINT fk_utilizador_cat FOREIGN KEY(id_categoria) REFERENCES categoria(id_categoria)
);

CREATE TABLE categoria(
    id_categoria NUMBER,
    nome VARCHAR2(30) NOT NULL,
    CONSTRAINT pk_cat PRIMARY KEY(id_categoria)
);

CREATE TABLE subcategoria(
    id_subcategoria NUMBER,
    nome VARCHAR2(30) NOT NULL,
    id_categoria NOT NULL,
    descricao VARCHAR2(254),
    CONSTRAINT pk_subcat PRIMARY KEY(id_subcategoria),
    CONSTRAINT fk_subcat_cat FOREIGN KEY(id_categoria) REFERENCES categoria(id_categoria)
);


CREATE TABLE estado(
    id_estado NUMBER ,
    descricao VARCHAR2(25),
    CONSTRAINT pk_estado PRIMARY KEY(id_estado)
);

CREATE TABLE pedido(
    id_pedido NUMBER,
    id_utilizador NUMBER NOT NULL,
    descricao VARCHAR2(254),
    dt_criacao DATE,
    cod_postal VARCHAR2(10),
    localidade VARCHAR2(40),
    rua VARCHAR2(150),
    coordenadas VARCHAR2(50),
    id_estado NUMBER,
    id_subcategoria NUMBER,
    id_administrador NUMBER,
    id_entidade NUMBER,
    dt_aprovacao DATE,
    obs_admin VARCHAR2(200),
    urgencia NUMBER,
    dt_inicio_res DATE,
    dt_fim_res DATE,
    obs_res VARCHAR2(200),
    CONSTRAINT pk_ped PRIMARY KEY(id_pedido),
    CONSTRAINT fk_ped_uti FOREIGN KEY(id_utilizador) REFERENCES utilizador(id_utilizador),
    CONSTRAINT fk_ped_admin FOREIGN KEY(id_administrador) REFERENCES utilizador(id_utilizador),
    CONSTRAINT fk_ped_enti FOREIGN KEY(id_entidade) REFERENCES utilizador(id_utilizador),
    CONSTRAINT fk_ped_subcat FOREIGN KEY(id_subcategoria) REFERENCES subcategoria(id_subcategoria),
    CONSTRAINT fk_ped_estado FOREIGN KEY(id_estado) REFERENCES estado(id_estado)
);

CREATE TABLE pedido_fotos(
    id_foto NUMBER,
    id_pedido NUMBER ,
    path VARCHAR2(255) NOT NULL,
    CONSTRAINT pk_fot PRIMARY KEY(id_foto),
    CONSTRAINT fk_ped FOREIGN KEY(id_pedido) REFERENCES pedido(id_pedido)
);




--Utilizador Não Registado--
    --Caso de uso: Registar utilizador
    Select COUNT(*)from utilizador where ( (email='banana@gmail.com') OR (nome='Gabriel'));
    INSERT INTO utilizador(id_utilizador,email,dt_nasc,password,nome,cod_postal,localidade,morada,tipoutil) VALUES (1,'banana@gmail.com',986354982,'1234','Gabriel','4900-734','BananaCity','Rua das bananeiras nº666',1);

--Utilizador--
     --Caso de uso: Registar Reclamação--
     INSERT INTO estado (descricao) VALUES('Por Resolver');
     INSERT INTO entidade(nome,descricao,email,telefone) VALUES('Ruas é conosco', 'Tudo a haver com ruas','ruas@gmail.com','251895786');
     INSERT INTO Categoria(nome,id_entidade) VALUES('Ruas',1);
     INSERT INTO subcategoria(nome,id_categoria,descricao) VALUES('Esgotos',1,'Esgotos');
    INSERT INTO pedido (id_utilizador,descricao,dt_criacao,cod_postal,localidade,rua,id_estado,id_subcategoria,id_administrador)
    VALUES (1,'Tampa de esgoto está fora do sitio',TO_DATE('04-12-2018','DD-MM-YYYY'),'4900','CabritaCity','Rua das Cabritas nº666',1,1,1);
     
    --Caso de uso: Ver Histórico de reclamações
    SELECT id_pedido, descricao, dt_criacao, cod_postal,localidade,rua, CASE WHEN dt_aprovacao is not NULL then 'APROVADO' else 'NAO APROVADO' END estado
    FROM pedido where id_utilizador=1;


   -- Caso de uso: Login--
    Select count(*) as sucesso from utilizador
    where nome='Gabriel' AND password=1234;
    
            
    --Caso de uso: Cancelar uma reclamação pendente
    DELETE from pedido where id_pedido=1 AND dt_aprovacao IS NULL;

--Administrador--

    --Caso de uso: Ver reclamações pendentes
    Select p.id_pedido , p.descricao, p.dt_criacao, p.cod_postal,p.localidade, p.morada,u.nome,c.nome,s.nome,l.localidade from pedido p
    inner join subcategoria s on (p.id_subcategoria=s.id_subcategoria)
    inner join categoria c on (s.id_categoria=c.id_categoria)
    inner join utilizador u on (u.id_utilizador=p.id_utilizador)
    where p.dt_aprovacao IS NULL;
    
    
    --Caso de uso: Avaliar reclamações Pendentes
    update pedido set dt_aprovacao = to_date('18-12-2018','DD-MM-YYYY'), obs_admin='Nada a apontar',urgencia=5
    where id_pedido=1 AND dt_aprovacao is NULL;
        
        
    --Caso de uso: Finalizar Processo de Reclamação
    update pedido set id_funcionario=1,dt_inicio_res = to_date('18-12-2018','DD-MM-YYYY'), dt_fim_res = to_date('18-12-2018','DD-MM-YYYY'),obs_res='TA TUDO EM ORDEM CHEFE'
    where id_pedido=1;
        
    
    --Caso de uso: Criar entidade--
    insert into entidade (id_entidade,nome,descricao,email,telefone,password) VALUES(1,'Fast VRUM','Limpa Ruas','fast@gmail.com','252859173','4321');


    --Caso de uso: Gerir utilizadores da plataforma--
    
        --Desativar Utilizador--
        UPDATE utilizador set estado=1 where id_utilizador=1;
    
    
    --Caso de uso: Ver utilizadores--
        Select * from utilizador;
    
    
    --Caso de uso: Ver histórico de resoluções--
        --Hisorico geral--
        Select e.id_funcionario, e.nome, e.descricao, p.descricao Pedido, p.dt_inicio_res, p.dt_fim_res, est.descricao estado, p.localidade, sc.nome subcategoria, c.nome categoria
	FROM entidade e
        inner join pedido p on (p.id_funcionario = f.id_funcionario)
        inner join estado est on (est.id_estado = p.id_estado)
        inner join subcategoria sc on (sc.id_subcategoria = p.id_subcategoria)
        inner join categoria c on (sc.id_categoria = c.id_categoria);
    
    --Hisorico de um funcionario--
        Select f.id_funcionario, f.nome, fun.descricao, p.descricao, p.dt_inicio_res, p.dt_fim_res, e.descricao estado, l.localidade, sc.nome, c.nome  funcionario 
        FROM funcionario f
        inner join pedido p on (p.id_funcionario = f.id_funcionario)
        inner join estado e on (e.id_estado = p.id_estado)
        inner join funcao fun on (fun.id_funcao = f.id_funcao)
        inner join entidade ent on (ent.id_entidade = f.id_entidade)
        inner join subcategoria sc on (sc.id_subcategoria = p.id_subcategoria)
        inner join categoria c on (sc.id_categoria = c.id_categoria)
        where f.id_funcionario = 3;
    
    --Caso de uso: Gerir entidade
        --Eliminar entidade
        update funcionario set id_entidade = 2 where id_entidade = 1;
        update categoria set id_entidade = 2 where id_entidade = 1;
        delete from entidade where id_entidade = 1;
    
        --Criar nova entidade
        insert into entidade(nome,descricao,email,telefone) values('Canil', 'Canil da cidade','canil@gmail.com','251673142');
    
        --Atualizar dados da entidade
        update entidade set nome='Canil', descricao='Entidade relatica ao canil da cidade' where id_entidade = 3;
    
        --Atribuir nova categoria a entidade
        insert into categoria(nome, id_entidade) values('Animais', 3);
    
       --Atribuir categoria existente a entidade
        update categoria set id_entidade = 2 where id_categoria = 1;
    
       --Adicionar nova subcategoria a categoria
        insert into subcategoria(nome, id_categoria, descricao) values('Animal solto', 1, 'Animal solto que represente um problema para o bem esta dos cidadaos');
    
       --Alterar categoria de subcategoria
        update subcategoria set id_categoria = 2 where id_subcategoria = 1;


--views-- 

    --Pedidos atribuidos a entidade--
    create view entidade_pedidos(id_entidade, nome, descricao_entidade, descricao_pedido, dt_criacao, rua, cod_postal, localidade, subcategoria, categoria, dt_inicio_res, dt_finalizacao, estado) as Select e.id_entidade, e.nome, e.descricao, p.descricao, p.dt_criacao, p.rua, p.cod_postal,p.localidade, sc.nome, c.nome, p.dt_inicio_res, p.dt_fim_res, est.descricao 
        from entidade e
        inner join categoria c on (c.id_entidade = e.id_entidade)
        inner join subcategoria sc on (sc.id_categoria = c.id_categoria)
        inner join pedido p on (p.id_subcategoria = sc.id_subcategoria)
        inner join estado est on (est.id_estado = p.id_estado);